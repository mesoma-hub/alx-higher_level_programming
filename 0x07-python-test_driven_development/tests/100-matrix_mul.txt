The ``100-matrix_mul`` module
============================

Using ``matrix_mul``
---------------------

Importing function from the module:

    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

Multiplying two matrices

    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    [[7, 10], [15, 22]]

Multiplying two matrices 2

    >>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
    [[13, 16]]

Multiplying two matrices 3

    >>> list1 = [[1, 4, 7], [2, 5, 8], [3, 6, 9]]
    >>> list2 = [[1, -1, 2], [2, -1, 2], [3, -3, 0]]
    >>> matrix_mul(list1, list2)
    [[30, -26, 10], [36, -31, 14], [42, -36, 18]]

Multiplying two matrices 4

    >>> matrix_mul([[1, 5, 7]], [[3], [5], [8]])
    [[84]]

Passing None as a matrix

    >>> matrix_mul(None, None)
    Traceback (most recent call last):
    	      ...
    TypeError: m_a must be a list

Passing None as a matrix

    >>> matrix_mul([[7, 12]], None)
    Traceback (most recent call last):
    	      ...
    TypeError: m_b must be a list

Passing a tuple as a matrix

    >>> matrix_mul((1, 3, 5), [[1.3], [5.2], [7.7]])
    Traceback (most recent call last):
    	      ...
    TypeError: m_a must be a list

Passing a string as a matrix

    >>> matrix_mul([[3, 3], [4, 4]], "Holberton")
    Traceback (most recent call last):
    	      ...
    TypeError: m_b must be a list

Passing a list of tuples

   >>> matrix_mul([(1, 5, 10)], [(1), (5)])
   Traceback (most recent call last):
   	     ...
   TypeError: m_a must be a list of lists

Passing a list of string

   >>> matrix_mul([[]], ["Holberton"])
   Traceback (most recent call last):
   	     ...

